(define (create n)
	(if (= n 0)
		(lambda (f) (lambda (x) x))
		(lambda (f) (lambda (x) (f (((create (- n 1)) f) x))))
	)
)

(define (pred n)
	(lambda (f) 
		(lambda (x) 
			(((n 
				(lambda (g) 
					(lambda (h) 
						(h (g f))
					)
				)
			  ) 
			  (lambda (u) x)
			 ) 
			 (lambda (u) u)
			)
		)
	)
)

(define (main)
	(setPort (open (getElement ScamArgs 1) 'read))
	(define env this)
    (define (iter expr)
         (if (not (eof?)) (begin (eval expr env) (iter (readExpr))))
         )
    (iter (readExpr))
)
