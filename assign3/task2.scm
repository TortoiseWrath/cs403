(define (replace obj replacements)
	(define (replaceSymbol sym replacements)
		(if (or (not (symbol? sym)) (nil? replacements))
			sym
			(if (== sym (car replacements))
				(car (cdr replacements))
				(replaceSymbol sym (cdr replacements))
			)
		)
	)
	; (inspect obj)
	(cond
		((function? obj)
			; (println "function")
			(set 'parameters (replace (get 'parameters obj) replacements) obj)
			(set 'code (replace (get 'code obj) replacements) obj)
		)
		((or (nil? obj) (object? obj))
			; (println "nil or object")
			obj
		)
		((list? obj)
			; (println "list")
			(if (eq? (car obj) 'quote)
				(cons (replace (car obj) replacements) (cdr obj))
				(cons (replace (car obj) replacements) (replace (cdr obj) replacements))
			)
		)
		((symbol? obj)
			; (println "symbol")
			(replaceSymbol obj replacements)
		)
		(else obj)
	)
)

(define (main)
	(setPort (open (getElement ScamArgs 1) 'read))
	(define env this)
    (define (iter expr)
         (if (not (eof?)) (begin (eval expr env) (iter (readExpr))))
         )
    (iter (readExpr))
)